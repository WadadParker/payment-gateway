---
title: "Mock Payment Gateway"
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mock Payment Gateway</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;900&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>

  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
  </style>
</head>
<body class="flex items-center justify-center h-screen bg-bg">
  <div class="bg-[#F9F9F9] pb-3 pt-2 px-6 rounded-[10px] shadow-lg w-full max-w-md">
    <header class="flex items-center mb-2">
      <h1 class=" text-2xl text-bg font-light tracking-[-1.07px] px-1.5 rounded-md bg-text">SHOPI</h1>
      <span class="ml-1 -mb-0.5 text-[9.408px] self-end text-bg-gray">0.1</span>
    </header>
    <hr class="bg-transparent h-1 border-t-2 mb-1.5 border-bg border-dashed" />

    <!-- Loading Indicator -->
    <div id="loading" class="bg-white pt-32 text-center h-[440px] hidden">
      <p class="text-4xl font-semibold text-center tracking-[-0.96px]">Processing</p>
      <p class="text-lg font-semibold tracking-[-0.48px] animate-pulse">. . .</p>
    </div>

    <main id="main-content" class="bg-white py-4 h-[440px]">
    <section class=" p-4 mb-1.5 text-center flex flex-col py-11 px-14 mx-8 border border-[#F1F1F1] rounded-[10px]">
      <aside class="text-6xl flex font-black tracking-[-1.6px] gap-x-2"><span class="text-[#535353] pr-1">â‚¿</span> <span id="amount">0.001</span></aside>
      <small class="text-[11.2px] text-[#D4D4D4] ml-[78%] flex items-center gap-x-0.5 hover:cursor-pointer hover:underline">+fees 
        <svg xmlns="http://www.w3.org/2000/svg" width="11" height="12" viewBox="0 0 11 12" fill="none">
          <g clip-path="url(#clip0_256_575)">
          <path d="M9.08142 2.07758C7.05439 0.0143478 3.76592 0.0122965 1.73637 2.07297C-0.29316 4.13369 -0.295203 7.47679 1.73186 9.54005C3.75887 11.6033 7.04739 11.6053 9.07694 9.54463C11.1064 7.48396 11.1085 4.14081 9.08142 2.07758ZM6.13182 9.15921C6.13182 9.24068 6.06688 9.30665 5.98679 9.30665H4.82652C4.74643 9.30665 4.68148 9.24068 4.68148 9.15921V4.78049C4.68148 4.69902 4.74643 4.63305 4.82652 4.63305H5.98679C6.06688 4.63305 6.13182 4.69899 6.13182 4.78049V9.15921ZM5.40665 4.02114C4.94285 4.02114 4.5655 3.63757 4.5655 3.16605C4.5655 2.69457 4.94283 2.31092 5.40665 2.31092C5.87048 2.31092 6.24781 2.69454 6.24781 3.16605C6.24781 3.63757 5.87043 4.02114 5.40665 4.02114Z" fill="#D5D5D5"/>
          </g>
          <defs>
          <clipPath id="clip0_256_575">
          <rect width="10.3875" height="10.56" fill="white" transform="translate(0.212891 0.528809)"/>
          </clipPath>
          </defs>
          </svg>
      </small>
    </section>
      <aside class=" ml-[18%] flex flex-col justify-center text-[10px] text-[#B5B5B5] font-bold">
        <p class=" text-left">Wallet connected</p>
        <span class="text-[#909090] font-light">0xdfF8c2Db78855748460C4431A6e165eF254a25ec</span>
        <a class="text-right mr-20 justify-end flex items-center gap-x-0.5" href="#" class="underline">Change 
          <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" viewBox="0 0 9 9" fill="none">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.24941 5.10928V6.85928C7.24941 7.24588 6.93601 7.55928 6.54941 7.55928H2.34941C1.96281 7.55928 1.64941 7.24588 1.64941 6.85928V2.65928C1.64941 2.27268 1.96281 1.95928 2.34941 1.95928H4.09941V2.65928H2.34941V6.85928H6.54941V5.10928H7.24941ZM7.2484 2.45425L4.69589 5.00676L4.20091 4.51179L6.75342 1.95928H5.1484V1.25928H7.9484V4.05928H7.2484V2.45425Z" fill="#B5B5B5"/>
            </svg>
        </a>
      </aside>
    <section class="text-center mt-8 mb-6 flex justify-center gap-x-5 items-center">
      <p class=" text-[33.6px] font-semibold tracking-[-0.96px] text-[#6A6A6A]">Pay with</p>
      <button id="btc" class="flex flex-col justify-center gap-y-1 py-1.5 px-3 bg-[#F6F6F6] rounded-sm border border-transparent transition-colors ease-linear hover:cursor-pointer hover:border-[#B6B6B6] hover:rounded-lg hover:bg-white">
        <img src="/assets/btc.png" class=" size-11" />
        <span class="text-[#6A6A6A] font-semibold text-[11.2px] tracking-tight self-center">BTC</span>
        
      </button>
      <button id="wbtc" class="flex flex-col gap-y-1 py-1.5 px-3 bg-[#F6F6F6] rounded-sm border border-transparent transition-colors ease-linear hover:border-[#B6B6B6] hover:rounded-lg hover:bg-white hover:cursor-pointer">
        <svg xmlns="http://www.w3.org/2000/svg" width="45" height="45" viewBox="0 0 45 45" fill="none">
          <g clip-path="url(#clip0_256_583)">
          <path d="M36.6276 9.51503L35.3975 10.7451C38.3327 13.955 39.9604 18.1471 39.9604 22.4966C39.9604 26.8462 38.3327 31.0383 35.3975 34.2481L36.6276 35.4782C39.8918 31.9375 41.7041 27.2981 41.7041 22.4823C41.7041 17.6665 39.8918 13.027 36.6276 9.48633V9.51503Z" fill="#5A5564"/>
          <path d="M10.7588 9.62158C13.9686 6.68637 18.1607 5.05865 22.5103 5.05865C26.8598 5.05865 31.0519 6.68637 34.2618 9.62158L35.4919 8.39148C31.9512 5.12723 27.3117 3.31494 22.4959 3.31494C17.6801 3.31494 13.0407 5.12723 9.5 8.39148L10.7588 9.62158Z" fill="#5A5564"/>
          <path d="M9.60644 34.2603C6.67471 31.0512 5.04913 26.8617 5.04913 22.515C5.04913 18.1683 6.67471 13.9788 9.60644 10.7696L8.37635 9.53955C5.11209 13.0802 3.2998 17.7197 3.2998 22.5355C3.2998 27.3513 5.11209 31.9907 8.37635 35.5314L9.60644 34.2603Z" fill="#5A5564"/>
          <path d="M34.2458 35.396C31.0359 38.3312 26.8438 39.9589 22.4943 39.9589C18.1447 39.9589 13.9526 38.3312 10.7428 35.396L9.5127 36.6261C13.0534 39.8903 17.6928 41.7026 22.5086 41.7026C27.3244 41.7026 31.9639 39.8903 35.5046 36.6261L34.2458 35.396Z" fill="#5A5564"/>
          <path d="M30.2643 18.4083C30.0183 15.8415 27.8042 14.9805 25.0037 14.7181V11.1836H22.8387V14.6525C22.2687 14.6525 21.6865 14.6525 21.1084 14.6525V11.1836H18.9598V14.7427H14.5684V17.0593C14.5684 17.0593 16.1675 17.0306 16.1429 17.0593C16.4312 17.0276 16.7206 17.1091 16.9501 17.2865C17.1795 17.464 17.3311 17.7236 17.373 18.0106V27.753C17.3668 27.8542 17.3404 27.9532 17.2953 28.044C17.2503 28.1349 17.1874 28.2157 17.1106 28.2819C17.0351 28.3493 16.9468 28.4008 16.851 28.4332C16.7552 28.4656 16.6538 28.4783 16.5529 28.4705C16.5816 28.4951 14.9784 28.4705 14.9784 28.4705L14.5684 31.0578H18.9188V34.6743H21.0838V31.1111H22.8141V34.6579H24.9831V31.0824C28.6406 30.861 31.191 29.9589 31.5108 26.5352C31.7692 23.7798 30.4735 22.5497 28.4028 22.0535C29.6616 21.4344 30.4407 20.2863 30.2643 18.4083ZM27.2301 26.1087C27.2301 28.7985 22.6214 28.491 21.1535 28.491V23.7182C22.6214 23.7223 27.2301 23.3 27.2301 26.1087ZM26.2255 19.3842C26.2255 21.8444 22.3795 21.5451 21.1576 21.5451V17.207C22.3795 17.207 26.2255 16.8215 26.2255 19.3842Z" fill="#F09242"/>
          <path d="M22.4936 44.9128C18.0636 44.912 13.7334 43.5977 10.0503 41.136C6.3673 38.6744 3.49687 35.1759 1.80198 31.083C0.107085 26.9901 -0.336164 22.4866 0.528276 18.1418C1.39272 13.797 3.52602 9.80606 6.65847 6.67361C9.79092 3.54116 13.7818 1.40785 18.1266 0.543413C22.4714 -0.321027 26.975 0.122222 31.0679 1.81712C35.1608 3.51201 38.6592 6.38244 41.1209 10.0655C43.5825 13.7485 44.8969 18.0787 44.8977 22.5087C44.8982 25.451 44.3191 28.3646 43.1934 31.083C42.0676 33.8015 40.4174 36.2715 38.3369 38.352C36.2563 40.4325 33.7863 42.0828 31.0679 43.2085C28.3494 44.3342 25.4359 44.9133 22.4936 44.9128ZM22.4936 1.85954C18.4122 1.86278 14.4234 3.0759 11.0314 5.34557C7.63933 7.61523 4.99627 10.8396 3.43628 14.611C1.87629 18.3825 1.46939 22.5317 2.26701 26.5344C3.06464 30.537 5.03098 34.2134 7.9175 37.0988C10.804 39.9841 14.4812 41.949 18.4841 42.745C22.4871 43.5411 26.6362 43.1325 30.407 41.571C34.1779 40.0096 37.4011 37.3652 39.6695 33.9723C41.9378 30.5793 43.1493 26.5901 43.1509 22.5087C43.152 19.796 42.6184 17.1097 41.5805 14.6034C40.5427 12.0971 39.021 9.82 37.1024 7.90223C35.1839 5.98446 32.9062 4.46366 30.3995 3.42681C27.8927 2.38996 25.2062 1.85738 22.4936 1.85954Z" fill="#282138"/>
          </g>
          <defs>
          <clipPath id="clip0_256_583">
          <rect x="0.0996094" y="0.112305" width="44.8" height="44.8" rx="2.8" fill="white"/>
          </clipPath>
          </defs>
        </svg>
          <span class="text-[#6A6A6A] font-semibold text-[11.2px] tracking-tight text-center self-center">wBTC</span>
      </button>
    </section>
    <footer class=" flex items-center text-center justify-center gap-x-2 text-[#D4D4D4] tracking-[-0.32] text-[11.2px] mt-12">
      <p>Powered by </p>
      <img src="/assets/garden.png" width="104px" height="32px" />
    </footer>
  </main>
  </div>
  <script>
    if (typeof window.ethereum !== 'undefined') {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      await provider.send("eth_requestAccounts", []);
      const signer = provider.getSigner();
      console.log('Ethereum provider and accounts loaded successfully');
      console.log('window.ethereum:', window.ethereum);
    } else {
      console.error('No Ethereum provider detected. Please install MetaMask.');
      alert('Please install MetaMask or another Ethereum wallet to proceed.');
    }

  </script>
  <script>
    import { SiweMessage } from 'siwe';
    
    window.addEventListener('message', function (event) {
      if (event.data.type === 'INITIATE_PAYMENT') {
        document.getElementById('amount').textContent = event.data.amount;
      }
    });
    const btcButton = document.querySelector('#btc');
    const wbtcButton = document.querySelector('#wbtc');

    btcButton.addEventListener('click',()=>{
      handlePayment()
    })
    wbtcButton.addEventListener('click',()=>{
      handlePayment()
    })

    const API_URL = 'https://api.waves.giving/api/pay';

    async function handlePayment() {
      try {
        const loadingDiv = document.getElementById('loading');
        const mainContent = document.getElementById('main-content');
        loadingDiv.classList.remove('hidden');
        mainContent.classList.add('hidden');

        try {
          const provider = new ethers.providers.Web3Provider(window.ethereum);
          await provider.send("eth_requestAccounts", [0]);
          const signer = provider.getSigner();
          console.log('Provider initialized:', provider);
          console.log('Signer address:', await signer.getAddress());
        } catch (error) {
          console.error('Error initializing provider:', error);
          alert('Error initializing provider: ' + error.message);
        }

        console.log('window.ethereum:', window.ethereum);

        const provider = new ethers.providers.Web3Provider(window.ethereum);
        const signer = provider.getSigner();
        const address = await signer.getAddress();
        const chainId = (await provider.getNetwork()).chainId;

        console.log("This is address",address);

        // Fetch nonce from backend
        const nonceRes = await fetch(`${API_URL}/api/nonce`);
        const nonce = await nonceRes.text();

        console.log(nonce)

        // Create SIWE message
        const message = new SiweMessage({
          domain: window.location.host,
          address: address,
          statement: 'Sign in with Ethereum to the app.',
          uri: window.location.origin,
          version: '1',
          chainId: chainId,
          nonce: nonce,
        });

        // Sign the message
        const signature = await signer.signMessage(message.prepareMessage());

        // Payload data
        const amountBTC = document.getElementById('amount').textContent;
        const calculatedAmountWBTC = "0.000997"; // This value should come from your swap logic
        const sendAddress = "tb1q52y3s93nssmw30tj7shhfgcxmpr234wulu7d9k"; // Replace with the actual BTC address
        const receiveAddress = "0x6E89F34cB9a7EE957ac3226611C6A81b26EC3Ff7"; // Replace with the actual WBTC address

        // Send the request to your backend API
        const response = await fetch(`${API_URL}/api/pay`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            message: message.toMessage(),
            signature: signature,
            amount: amountBTC,
            calculatedamount: calculatedAmountWBTC,
            sendAddress: sendAddress,
            receiveAddress: receiveAddress,
          }),
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const responseData = await response.json();

        if (responseData.success) {
          window.parent.postMessage({ type: 'PAYMENT_SUCCESS', data: { message: 'Payment successful' } }, '*');
        } else {
          throw new Error('Transaction failed');
        }
      } catch (error) {
        console.error('Error during payment:', error);
        alert('Payment failed: ' + error.message);
      } finally {
        // Revert back the visibility of main content if needed
        const loadingDiv = document.getElementById('loading');
        const mainContent = document.getElementById('main-content');
        loadingDiv.classList.add('hidden');
        mainContent.classList.remove('hidden');
      }
    }
  </script>
</body>
</html>
